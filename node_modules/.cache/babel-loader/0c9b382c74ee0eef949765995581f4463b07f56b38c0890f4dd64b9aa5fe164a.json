{"ast":null,"code":"var _jsxFileName = \"/Users/mac/react-memory-game-main/src/components/Attempts.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Attempts = ({\n  currentAttempt,\n  maxAttempt\n}) => {\n  let width = Math.round(currentAttempt / maxAttempt * 100).toString() + \"%\";\n  if (width === \"0%\") {\n    width = \"5%\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row game-attempt\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-4\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"attemp-description\",\n        children: [\"You have \", maxAttempt, \" attempts to match all items.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attemp-progress-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Attempts \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"float-right\",\n          children: [currentAttempt, \"/\", maxAttempt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"attempt-progressbar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"attempt-progressbar-improvement\",\n          style: {\n            width: width\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Attempts;\nexport default Attempts;\nvar _c;\n$RefreshReg$(_c, \"Attempts\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Attempts","currentAttempt","maxAttempt","width","Math","round","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","_c","$RefreshReg$"],"sources":["/Users/mac/react-memory-game-main/src/components/Attempts.jsx"],"sourcesContent":["import React from \"react\";\n\n\nconst Attempts = ({ currentAttempt, maxAttempt }) => {\n\n  let width = Math.round(currentAttempt / maxAttempt * 100).toString() + \"%\";\n\n  if (width === \"0%\") {\n    width = \"5%\";\n  }\n  return (\n    <div className=\"row game-attempt\">\n      <div className=\"col-md-4\">\n        <p className=\"attemp-description\">You have {maxAttempt} attempts to match all items.</p>\n      </div>\n      <div className=\"col-md-2\"></div>\n      <div className=\"col-md-6\">\n        <div className=\"attemp-progress-text\">\n          <span>Attempts </span>\n          <span className=\"float-right\">{currentAttempt}/{maxAttempt}</span>\n        </div>\n        <div className=\"attempt-progressbar\">\n          <div className=\"attempt-progressbar-improvement\" style={{ width: width }}></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default Attempts;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAW,CAAC,KAAK;EAEnD,IAAIC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACJ,cAAc,GAAGC,UAAU,GAAG,GAAG,CAAC,CAACI,QAAQ,CAAC,CAAC,GAAG,GAAG;EAE1E,IAAIH,KAAK,KAAK,IAAI,EAAE;IAClBA,KAAK,GAAG,IAAI;EACd;EACA,oBACEJ,OAAA;IAAKQ,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BT,OAAA;MAAKQ,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvBT,OAAA;QAAGQ,SAAS,EAAC,oBAAoB;QAAAC,QAAA,GAAC,WAAS,EAACN,UAAU,EAAC,+BAA6B;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CAAC,eACNb,OAAA;MAAKQ,SAAS,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAChCb,OAAA;MAAKQ,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACvBT,OAAA;QAAKQ,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCT,OAAA;UAAAS,QAAA,EAAM;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtBb,OAAA;UAAMQ,SAAS,EAAC,aAAa;UAAAC,QAAA,GAAEP,cAAc,EAAC,GAAC,EAACC,UAAU;QAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,eACNb,OAAA;QAAKQ,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eAClCT,OAAA;UAAKQ,SAAS,EAAC,iCAAiC;UAACM,KAAK,EAAE;YAAEV,KAAK,EAAEA;UAAM;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAE,EAAA,GAxBKd,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}