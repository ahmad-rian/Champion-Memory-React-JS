{"ast":null,"code":"import _toConsumableArray from\"/Users/mac/react-memory-game-main/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/mac/react-memory-game-main/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/mac/react-memory-game-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{getGameData,updateLevel}from\"store/gameActions\";import{alertActions}from\"store/alert-slice\";import Card from\"./Card\";import Attempts from'./Attempts';import Alert from\"./Alert\";import GameProgress from\"./GameProgress\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MemoryGame=function MemoryGame(){var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.game;}),currentLevel=_useSelector.currentLevel,levelCount=_useSelector.levelCount;var _useSelector2=useSelector(function(state){return state.memoryGame;}),size=_useSelector2.size,attempt=_useSelector2.attempt,cardCount=_useSelector2.cardCount,cards=_useSelector2.cards;var _useSelector3=useSelector(function(state){return state.alert;}),show=_useSelector3.show,type=_useSelector3.type;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),alert=_useState2[0],showAlert=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),checkList=_useState4[0],updateCheckList=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),finish=_useState6[0],setFinish=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),currentAttempt=_useState8[0],setAttempt=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),gameCards=_useState10[0],updateGameCards=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),nextLevel=_useState12[0],setNextLevel=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),levelReset=_useState14[0],setLevelReset=_useState14[1];var replayClick=function replayClick(){setAttempt(0);updateCheckList([]);setFinish(cardCount/2);updateGameCards([]);dispatch(alertActions.reset());dispatch(getGameData());};var nextLevelClick=function nextLevelClick(){var reset=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;setAttempt(0);updateCheckList([]);setFinish(cardCount/2);updateGameCards([]);dispatch(alertActions.reset());if(reset){setLevelReset(true);}else{setNextLevel(true);}};useEffect(function(){setFinish(cardCount/2);updateGameCards(cards.map(function(card){return _objectSpread(_objectSpread({},card),{},{status:false,className:null});}));},[cardCount,cards]);useEffect(function(){if(!nextLevel&&!levelReset)return;dispatch(updateLevel(levelReset));setNextLevel(false);setLevelReset(false);},[dispatch,nextLevel,setNextLevel,levelReset,setLevelReset]);var check=function check(index,updatedData){var updatedChecklist=_toConsumableArray(checkList);if(updatedChecklist.length<2){updatedChecklist.push(index);}updateCheckList(updatedChecklist);updateGameCards(updatedData);if(updatedChecklist.length>=2){setTimeout(function(){var newAttempt=currentAttempt+1;var newFinish=finish;var updatedData=_toConsumableArray(gameCards);var first=updatedData[updatedChecklist[0]];var second=updatedData[updatedChecklist[1]];if(first.id===second.id){newFinish--;setFinish(newFinish);}else{updatedData[updatedChecklist[0]].className=\"close\";updatedData[updatedChecklist[0]].status=false;updatedData[updatedChecklist[1]].className=\"close\";updatedData[updatedChecklist[1]].status=false;updateGameCards(updatedData);}setAttempt(newAttempt);updateCheckList([]);if(newFinish===0){if(currentLevel===levelCount){dispatch(alertActions.restore());}else{dispatch(alertActions.success());}showAlert(true);}else{if(newAttempt>=attempt){dispatch(alertActions.error());showAlert(true);}else if(newAttempt+newFinish>attempt){dispatch(alertActions.warning());}}},600);}};var _setStatus=function setStatus(index,checkList){if(checkList.includes(index)||checkList.length===2){return;}if(gameCards[index].status){return;}var updatedData=gameCards.map(function(item,i){var d=_objectSpread({},item);if(index===i&&!d.status){d.className=\"open\";d.status=true;}else{d.className=null;}return d;});check(index,updatedData);};var cardsList=gameCards.map(function(item,index){return/*#__PURE__*/_jsx(Card,{data:item,index:index,setStatus:function setStatus(){return _setStatus(index,checkList);},size:size},index);});return/*#__PURE__*/_jsxs(\"div\",{className:\"game w-100\",children:[alert&&show&&/*#__PURE__*/_jsx(Alert,{replayClick:replayClick,type:type,showAlert:showAlert,nextLevel:nextLevelClick}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row content flex-wrap\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-7\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"game-name\",children:\"Memory Game\"}),/*#__PURE__*/_jsx(Attempts,{currentAttempt:currentAttempt,maxAttempt:attempt}),/*#__PURE__*/_jsx(\"div\",{className:\"row main-game\",children:cardsList})]}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-4 col-md-5 col-12 offset-lg-1 mb-4 mb-md-0 order-md-2 order-3\",children:/*#__PURE__*/_jsx(\"div\",{className:\"game-item\",children:/*#__PURE__*/_jsx(GameProgress,{})})})]})})]});};export default MemoryGame;","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","getGameData","updateLevel","alertActions","Card","Attempts","Alert","GameProgress","jsx","_jsx","jsxs","_jsxs","MemoryGame","dispatch","_useSelector","state","game","currentLevel","levelCount","_useSelector2","memoryGame","size","attempt","cardCount","cards","_useSelector3","alert","show","type","_useState","_useState2","_slicedToArray","showAlert","_useState3","_useState4","checkList","updateCheckList","_useState5","_useState6","finish","setFinish","_useState7","_useState8","currentAttempt","setAttempt","_useState9","_useState10","gameCards","updateGameCards","_useState11","_useState12","nextLevel","setNextLevel","_useState13","_useState14","levelReset","setLevelReset","replayClick","reset","nextLevelClick","arguments","length","undefined","map","card","_objectSpread","status","className","check","index","updatedData","updatedChecklist","_toConsumableArray","push","setTimeout","newAttempt","newFinish","first","second","id","restore","success","error","warning","setStatus","includes","item","i","d","cardsList","data","children","maxAttempt"],"sources":["/Users/mac/react-memory-game-main/src/components/MemoryGame.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getGameData, updateLevel } from \"store/gameActions\";\nimport { alertActions } from \"store/alert-slice\";\n\nimport Card from \"./Card\";\nimport Attempts from './Attempts';\nimport Alert from \"./Alert\";\nimport GameProgress from \"./GameProgress\";\n\n\nconst MemoryGame = () => {\n\n  const dispatch = useDispatch();\n\n  const {\n    currentLevel, levelCount\n  } = useSelector(state => state.game);\n\n  const {\n    size, attempt, cardCount, cards\n  } = useSelector(state => state.memoryGame);\n\n  const {\n    show, type\n  } = useSelector(state => state.alert);\n\n  const [alert, showAlert] = useState(true);\n  const [checkList, updateCheckList] = useState([]);\n  const [finish, setFinish] = useState(0);\n  const [currentAttempt, setAttempt] = useState(0);\n  const [gameCards, updateGameCards] = useState([]);\n  const [nextLevel, setNextLevel] = useState(false);\n  const [levelReset, setLevelReset] = useState(false);\n\n  const replayClick = () => {\n    setAttempt(0);\n    updateCheckList([]);\n    setFinish(cardCount / 2);\n    updateGameCards([]);\n    dispatch(alertActions.reset());\n    dispatch(getGameData());\n  };\n\n  const nextLevelClick = (reset = false) => {\n    setAttempt(0);\n    updateCheckList([]);\n    setFinish(cardCount / 2);\n    updateGameCards([]);\n    dispatch(alertActions.reset());\n    if (reset) {\n      setLevelReset(true);\n    } else {\n      setNextLevel(true);\n    }\n  }\n\n  useEffect(() => {\n    setFinish(cardCount / 2);\n    updateGameCards(cards.map(card => {\n      return {\n        ...card,\n        status: false,\n        className: null,\n      };\n    }));\n  }, [cardCount, cards]);\n\n  useEffect(() => {\n    if (!nextLevel && !levelReset) return;\n    dispatch(updateLevel(levelReset));\n    setNextLevel(false);\n    setLevelReset(false);\n  }, [dispatch, nextLevel, setNextLevel, levelReset, setLevelReset]);\n\n\n\n  const check = (index, updatedData) => {\n    const updatedChecklist = [...checkList];\n    if (updatedChecklist.length < 2) {\n      updatedChecklist.push(index);\n    }\n\n    updateCheckList(updatedChecklist);\n    updateGameCards(updatedData);\n\n    if (updatedChecklist.length >= 2) {\n      setTimeout(() => {\n        let newAttempt = currentAttempt + 1;\n        let newFinish = finish;\n        const updatedData = [...gameCards];\n        let first = updatedData[updatedChecklist[0]];\n        let second = updatedData[updatedChecklist[1]];\n        if (first.id === second.id) {\n          newFinish--;\n          setFinish(newFinish);\n        } else {\n          updatedData[updatedChecklist[0]].className = \"close\";\n          updatedData[updatedChecklist[0]].status = false;\n          updatedData[updatedChecklist[1]].className = \"close\";\n          updatedData[updatedChecklist[1]].status = false;\n\n          updateGameCards(updatedData);\n        }\n        setAttempt(newAttempt);\n        updateCheckList([]);\n\n        if (newFinish === 0) {\n          if (currentLevel === levelCount) {\n            dispatch(alertActions.restore());\n          } else {\n            dispatch(alertActions.success());\n          }\n\n          showAlert(true);\n        } else {\n          if (newAttempt >= attempt) {\n            dispatch(alertActions.error());\n            showAlert(true);\n          }\n          else if (newAttempt + newFinish > attempt) {\n            dispatch(alertActions.warning());\n          }\n        }\n      }, 600);\n    }\n  }\n\n  const setStatus = (index, checkList) => {\n\n    if (checkList.includes(index) || checkList.length === 2) {\n      return\n    }\n\n    if (gameCards[index].status) {\n      return\n    }\n\n    const updatedData = gameCards.map((item, i) => {\n      const d = { ...item };\n      if (index === i && !d.status) {\n        d.className = \"open\";\n        d.status = true;\n      } else {\n        d.className = null;\n      }\n      return d;\n    });\n    check(index, updatedData);\n  };\n\n  let cardsList = gameCards.map((item, index) => {\n    return (\n      <Card\n        key={index}\n        data={item}\n        index={index}\n        setStatus={\n          () => setStatus(index, checkList)\n        }\n        size={size}\n      />\n    );\n  });\n\n  return (\n    <div className=\"game w-100\">\n      {alert && show &&\n        <Alert\n          replayClick={replayClick}\n          type={type}\n          showAlert={showAlert}\n          nextLevel={nextLevelClick}\n        />\n      }\n      <div className=\"container\">\n        <div className=\"row content flex-wrap\">\n          <div className=\"col-md-7\">\n            <p className=\"game-name\">Memory Game</p>\n            <Attempts currentAttempt={currentAttempt} maxAttempt={attempt} />\n            <div className=\"row main-game\">\n              {cardsList}\n            </div>\n          </div>\n          <div className=\"col-lg-4 col-md-5 col-12 offset-lg-1 mb-4 mb-md-0 order-md-2 order-3\">\n            <div className=\"game-item\">\n              <GameProgress />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default MemoryGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}