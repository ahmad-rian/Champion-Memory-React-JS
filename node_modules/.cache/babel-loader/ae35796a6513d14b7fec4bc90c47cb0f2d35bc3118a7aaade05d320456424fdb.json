{"ast":null,"code":"var _jsxFileName = \"/Users/mac/react-memory-game-main/src/components/GameProgress.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport memoryGameLogo from \"assets/img/memory-game-logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameProgress = () => {\n  _s();\n  const {\n    currentLevel,\n    levelCount\n  } = useSelector(state => state.game);\n\n  // Initial time state (adjust as needed)\n  const [remainingTime, setRemainingTime] = useState(30); // Adjust starting time in seconds\n\n  // Function to handle time decrement\n  const decrementTime = () => {\n    if (remainingTime > 0) {\n      setRemainingTime(remainingTime - 1);\n    } else {\n      // Handle what happens when time runs out (e.g., game over)\n      console.log(\"Time's Up!\");\n    }\n  };\n\n  // UseEffect to run the timer on component mount and every second\n  useEffect(() => {\n    const timer = setInterval(decrementTime, 1000); // Update every second\n\n    // Cleanup function to stop the timer on component unmount\n    return () => clearInterval(timer);\n  }, []);\n  let levelProgressWidth = Math.round(currentLevel / levelCount * 100).toString() + \"%\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-item-head\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: memoryGameLogo,\n        alt: \"logo\",\n        width: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-title\",\n      children: \"Champion Memory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-description-title\",\n      children: \"This is Memory Game for Child\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-progress-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [currentLevel, \"/\", levelCount, \" level\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          marginLeft: 10\n        },\n        children: [\"Time: \", remainingTime, \" seconds\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-progress-line\",\n        style: {\n          width: levelProgressWidth\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(GameProgress, \"cW0NUgPiRO1qK9tJxbwGwK28Hpw=\", false, function () {\n  return [useSelector];\n});\n_c = GameProgress;\nexport default GameProgress;\nvar _c;\n$RefreshReg$(_c, \"GameProgress\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","memoryGameLogo","jsxDEV","_jsxDEV","GameProgress","_s","currentLevel","levelCount","state","game","remainingTime","setRemainingTime","decrementTime","console","log","timer","setInterval","clearInterval","levelProgressWidth","Math","round","toString","className","children","src","alt","width","fileName","_jsxFileName","lineNumber","columnNumber","style","marginLeft","_c","$RefreshReg$"],"sources":["/Users/mac/react-memory-game-main/src/components/GameProgress.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport memoryGameLogo from \"assets/img/memory-game-logo.png\";\n\nconst GameProgress = () => {\n  const {\n    currentLevel, levelCount\n  } = useSelector(state => state.game);\n\n  // Initial time state (adjust as needed)\n  const [remainingTime, setRemainingTime] = useState(30); // Adjust starting time in seconds\n\n  // Function to handle time decrement\n  const decrementTime = () => {\n    if (remainingTime > 0) {\n      setRemainingTime(remainingTime - 1);\n    } else {\n      // Handle what happens when time runs out (e.g., game over)\n      console.log(\"Time's Up!\");\n    }\n  };\n\n  // UseEffect to run the timer on component mount and every second\n  useEffect(() => {\n    const timer = setInterval(decrementTime, 1000); // Update every second\n\n    // Cleanup function to stop the timer on component unmount\n    return () => clearInterval(timer);\n  }, []);\n\n  let levelProgressWidth = Math.round(currentLevel / levelCount * 100).toString() + \"%\";\n\n  return (\n    <div className=\"game-item-head\">\n      <div className=\"game-logo\">\n        <img src={memoryGameLogo} alt=\"logo\" width=\"100\" />\n      </div>\n      <div className=\"game-title\">Champion Memory</div>\n      <div className=\"game-description-title\">This is Memory Game for Child</div>\n      <div className=\"game-progress-text\">\n        <span>{currentLevel}/{levelCount} level</span>\n        {/* Display remaining time */}\n        <span style={{ marginLeft: 10 }}>Time: {remainingTime} seconds</span>\n      </div>\n      <div className=\"game-progress-bar\">\n        <div className=\"game-progress-line\" style={{ width: levelProgressWidth }}></div>\n      </div>\n    </div>\n  );\n};\n\nexport default GameProgress;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}