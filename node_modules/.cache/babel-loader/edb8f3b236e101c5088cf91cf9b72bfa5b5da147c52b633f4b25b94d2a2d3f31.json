{"ast":null,"code":"export const WORD_CARDS = [{\n  id: 1,\n  value: \"apple\",\n  type: \"word\"\n}, {\n  id: 2,\n  value: \"banana\",\n  type: \"word\"\n}, {\n  id: 3,\n  value: \"blackberry\",\n  type: \"word\"\n}, {\n  id: 4,\n  value: \"carrot\",\n  type: \"word\"\n}, {\n  id: 5,\n  value: \"cherry\",\n  type: \"word\"\n}, {\n  id: 6,\n  value: \"cucumber\",\n  type: \"word\"\n}, {\n  id: 7,\n  value: \"eggplant\",\n  type: \"word\"\n}, {\n  id: 8,\n  value: \"grape\",\n  type: \"word\"\n}, {\n  id: 9,\n  value: \"kiwi\",\n  type: \"word\"\n}, {\n  id: 10,\n  value: \"lemon\",\n  type: \"word\"\n}, {\n  id: 11,\n  value: \"onion\",\n  type: \"word\"\n}, {\n  id: 12,\n  value: \"orange\",\n  type: \"word\"\n}, {\n  id: 13,\n  value: \"pear\",\n  type: \"word\"\n}, {\n  id: 14,\n  value: \"pineapple\",\n  type: \"word\"\n}, {\n  id: 15,\n  value: \"pomegranate\",\n  type: \"word\"\n}, {\n  id: 16,\n  value: \"potato\",\n  type: \"word\"\n}, {\n  id: 17,\n  value: \"raspberry\",\n  type: \"word\"\n}, {\n  id: 18,\n  value: \"strawberry\",\n  type: \"word\"\n}, {\n  id: 19,\n  value: \"tomato\",\n  type: \"word\"\n}, {\n  id: 20,\n  value: \"watermelon\",\n  type: \"word\"\n}];","map":{"version":3,"names":["WORD_CARDS","id","value","type"],"sources":["/Users/mac/react-memory-game-main/src/data/wordCards.js"],"sourcesContent":["export const WORD_CARDS = [\n  {\n    id: 1,\n    value: \"apple\",\n    type: \"word\",\n  },\n  {\n    id: 2,\n    value: \"banana\",\n    type: \"word\",\n  },\n  {\n    id: 3,\n    value: \"blackberry\",\n    type: \"word\",\n  },\n  {\n    id: 4,\n    value: \"carrot\",\n    type: \"word\",\n  },\n  {\n    id: 5,\n    value: \"cherry\",\n    type: \"word\",\n  },\n  {\n    id: 6,\n    value: \"cucumber\",\n    type: \"word\",\n  },\n  {\n    id: 7,\n    value: \"eggplant\",\n    type: \"word\",\n  },\n  {\n    id: 8,\n    value: \"grape\",\n    type: \"word\",\n  },\n  {\n    id: 9,\n    value: \"kiwi\",\n    type: \"word\",\n  },\n  {\n    id: 10,\n    value: \"lemon\",\n    type: \"word\",\n  },\n  {\n    id: 11,\n    value: \"onion\",\n    type: \"word\",\n  },\n  {\n    id: 12,\n    value: \"orange\",\n    type: \"word\",\n  },\n  {\n    id: 13,\n    value: \"pear\",\n    type: \"word\",\n  },\n  {\n    id: 14,\n    value: \"pineapple\",\n    type: \"word\",\n  },\n  {\n    id: 15,\n    value: \"pomegranate\",\n    type: \"word\",\n  },\n  {\n    id: 16,\n    value: \"potato\",\n    type: \"word\",\n  },\n  {\n    id: 17,\n    value: \"raspberry\",\n    type: \"word\",\n  },\n  {\n    id: 18,\n    value: \"strawberry\",\n    type: \"word\",\n  },\n  {\n    id: 19,\n    value: \"tomato\",\n    type: \"word\",\n  },\n  {\n    id: 20,\n    value: \"watermelon\",\n    type: \"word\",\n  },\n];\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,CACxB;EACEC,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,YAAY;EACnBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,UAAU;EACjBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,UAAU;EACjBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,KAAK,EAAE,MAAM;EACbC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,MAAM;EACbC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,WAAW;EAClBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,aAAa;EACpBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,WAAW;EAClBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,YAAY;EACnBC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,QAAQ;EACfC,IAAI,EAAE;AACR,CAAC,EACD;EACEF,EAAE,EAAE,EAAE;EACNC,KAAK,EAAE,YAAY;EACnBC,IAAI,EAAE;AACR,CAAC,CACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}